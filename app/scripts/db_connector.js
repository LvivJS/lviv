'use strict';

var config = require('./config');
var utilities = require('./utilities');
var Firebase = require('firebase');

var FirebaseConnect = {
  get: function(file, next) {
    var ref = new Firebase(config.firebasePath + '/' + file);
    // Attach an asynchronous callback to read the data at our posts reference
    ref.on('value', function(snapshot) {
      next(snapshot.val());
    }, function(errorObject) {
      console.log('The read failed: ' + errorObject.code);
    });
  },
  //This is pushing data to data list
  //and create a unique timestamp based ID
  //for list item
  push: function(listPath, obj, next) {
    var ref = new Firebase(config.firebasePath);
    var listRef = ref.child(listPath);
    // Generate a reference to a new location and add some data using push()
    var listItemRef = listRef.push(obj);
    // Get the unique ID generated by push()
    var listItemID = listItemRef.key();
    //handle ID
    if (next) {
      next(listItemID);
    }
  },
  set: function(childPath, obj) {
    var ref = new Firebase(config.firebasePath);
    var childRef = ref.child(childPath);
    //This will create path and data
    //or replace all existing data with obj in childPath
    childRef.set(obj);
  },
  update: function(parentPath, childName, obj) {
    var ref = new Firebase(config.firebasePath);
    var parentRef = ref.child(parentPath);
    var childRef = parentRef.child(childName);
    //This updates EXISTING data in childPef
    //so obj should be filled with properties
    //which already are present in child
    childRef.update(obj);
  }
};

var MongoRestfulConnect = {
  get: function(path, next) {
    //handle path string to get proper link for mongoLab account
    var pathSplitted = path.split('/');
    var collection = pathSplitted[0];
    var file = pathSplitted[1];
    //get proper id of file from local config file
    var module = config.mongoLab.modulesIds[file];
    //concat link for mongoLab
    var pathToFile = config.mongoLab.baseURL + collection + '/' + module + config.mongoLab.apiKey;
    //use http request to get file
    utilities.ajax('get', pathToFile, next);
  },
  push: function(listPath, obj, next) {
    var collection = listPath;
    var pathToFile = config.mongoLab.baseURL + collection + config.mongoLab.apiKey;
    utilities.ajax('post', pathToFile, next, obj);
    console.log(pathToFile);
  },
};

var LocalConnect = {
  get: function(path, next) {
    // strip 'modules' from path becasue we dont have such locally
    var filePath = '/' + path.replace('modules/', '');
    var file = (config.localePath + filePath + '.json');

    utilities.ajax('get', file, next);
  },
  push: function(callBack, obj) {
    var regForm = document.getElementById('registration');
    utilities.ajax('post', '', function(status) {
      if (status == 200) {
        regForm.innerHTML = '<div class="regist-resp">Thanks for registration!</div>';
      }
      if (status == 500 || status == 404) {
        regForm.innerHTML = '<div class="regist-resp">Registration failed...</div>';
      }
    }, obj);
    if (callBack) {
      callBack;
    }
  }
};

module.exports = LocalConnect;
